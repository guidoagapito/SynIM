
# TODO:
# - check that modes_first_step is the non-POLC output
# LGS SH: rotAnglePhInDeg - different for each one
# LGS slopec : different subap tag depending on rot angle
# All SH: double check threshold
# LGS detector: double check readout level and quantum efficiency



main:
  root_dir:          'C:\Users\guido\OneDrive\Documenti\GitHub\SPECULA\main\scao\calib\MCAO'         # Root directory for calibration manager
  store_dir:         './output'             # Data result directory: 'store_dir'/TN/
  pixel_pupil:       480                    # Linear dimension of pupil phase array
  pixel_pitch:       0.0802                 # [m] Pitch of the pupil phase array2
  total_time:        0.100                  # [s] Total simulation running time
  time_step:         0.002                  # [s] Simulation time step
  zenithAngleInDeg:  30.0                   # [deg] Airmass correction


seeing:
  class:             'FuncGenerator'
  constant:          0.65                  # ["] seeing value
  outputs: ['output']


wind_speed:
  class:             'FuncGenerator'
  constant:          [5.5, 5.5, 5.1, 5.5, 5.6, 5.7, 5.8, 6.0, 6.5, 7.0,
                      7.5, 8.5, 9.5, 11.5, 17.5, 23.0, 26.0, 29.0, 32.0, 27.0,
                      22.0, 14.5, 9.5, 6.3, 5.5, 6.0, 6.5, 7.0, 7.5, 8.0,
                      8.5, 9.0, 9.5, 10.0, 10.0]      # [m/s] Wind speed value
  outputs: ['output']


wind_direction:
  class:             'FuncGenerator'
  constant:          [0, -180, 0, 0, 90, 180, 0, 0, 0, -180,
                      0, 0, -90, 0, 90, -180, 90, 0, -90, -90,
                      0, -90, 0, 0, 180, 180, 0, -180, 90, 0,
                      0, 180, -90, 90, -90]   # [degrees] Wind direction value
  outputs: ['output']


source_on_axis:
  class:             'Source'
  polar_coordinates:  [0.0, 0.0]           # [arcsec, degrees] source polar coordinates
  magnitude:         8                    # source magnitude
  wavelengthInNm:    750                   # [nm] wavelength

source_lgs1: &LGS_SOURCE
  class:             'Source'
  polar_coordinates:  [45.0, 0.0]           # [arcsec, degrees] source polar coordinates
  height:            90000                 # Source height [m]
  magnitude:         5.0                   # source magnitude
  wavelengthInNm:    589                   # [nm] wavelength

source_lgs2: { <<: *LGS_SOURCE, polar_coordinates: [45.0, 60.0] }
source_lgs3: { <<: *LGS_SOURCE, polar_coordinates: [45.0, 120.0] }
source_lgs4: { <<: *LGS_SOURCE, polar_coordinates: [45.0, 180.0] }
source_lgs5: { <<: *LGS_SOURCE, polar_coordinates: [45.0, 240.0] }
source_lgs6: { <<: *LGS_SOURCE, polar_coordinates: [45.0, 300.0] }

source_ngs1: &NGS_SOURCE
  class:             'Source'
  polar_coordinates:  [55.0, 0.0]         # [arcsec, degrees] source polar coordinates
  height:            .inf                # Source height [m]
  magnitude:         10.0                # source magnitude
  wavelengthInNm:    1650                # [nm] wavelength

source_ngs2: { <<: *NGS_SOURCE, polar_coordinates: [55.0, 120.0] }
source_ngs3: { <<: *NGS_SOURCE, polar_coordinates: [55.0, 240.0] }

source_ref1: &REF_SOURCE
  class:             'Source'
  polar_coordinates:  [55.0, 0.0]         # [arcsec, degrees] source polar coordinates
  height:            .inf                # Source height [m]
  magnitude:         10.0                # source magnitude
  wavelengthInNm:    750                # [nm] wavelength

source_ref2: { <<: *REF_SOURCE, polar_coordinates: [55.0, 120.0] }
source_ref3: { <<: *REF_SOURCE, polar_coordinates: [55.0, 240.0] }


pupilstop:                                 # Default parameters (circular pupil)
  class: 'Pupilstop'
  tag: 'EELT480pp0.0803m_obs0.283_spider2023'

atmo:
  class:                'AtmoEvolution'
  L0:                   25                   # [m] Outer scale
  heights:              [30.0000, 90.0000, 150.000, 200.000, 245.000, 300.000, 390.000, 600.000, 1130.00, 1880.00,
                         2630.00, 3500.00, 4500.00, 5500.00, 6500.00, 7500.00, 8500.00, 9500.00, 10500.0, 11500.0,
                         12500.0, 13500.0, 14500.0, 15500.0, 16500.0, 17500.0, 18500.0, 19500.0, 20500.0, 21500.0,
                         22500.0, 23500.0, 24500.0, 25500.0, 26500.0] # [m] layer heights at 0 zenith angle
  Cn2:                  [0.241954, 0.119977, 0.0968817, 0.0589889, 0.0472911, 0.0472911, 0.0472911, 0.0472911, 0.0398925, 0.0323939,
                         0.0161969, 0.0260951, 0.0155971, 0.0103980, 0.00999811, 0.0119977, 0.00400924, 0.0139974, 0.0129975, 0.00700868,
                         0.0159970, 0.0258951, 0.0190964, 0.00986813, 0.00616883, 0.00400924, 0.00246953, 0.00215959, 0.00184965, 0.00135974,
                         0.00110979, 0.000616883, 0.000925825, 0.000493907, 0.000431918] # Cn2 weights (total must be eq 1)
  fov:                  160.0
  inputs:
    seeing: 'seeing.output'
    wind_speed: 'wind_speed.output'
    wind_direction: 'wind_direction.output'
  outputs: ['layer_list']


prop:
  class:                'AtmoPropagation'
  source_dict_ref:      ['source_on_axis',
                         'source_lgs1','source_lgs2','source_lgs3','source_lgs4','source_lgs5','source_lgs6',
                         'source_ngs1', 'source_ngs2', 'source_ngs3',
                         'source_ref1', 'source_ref2', 'source_ref3']
  inputs:
    atmo_layer_list: 'atmo.layer_list'
    common_layer_list: [ 'pupilstop',
                  'dm1.out_layer:-1',
                  'dm2.out_layer:-1',
                  'dm3.out_layer:-1',
                  ]
  outputs: ['out_source_on_axis_ef','out_source_lgs1_ef','out_source_lgs2_ef','out_source_lgs3_ef',
            'out_source_lgs4_ef','out_source_lgs5_ef','out_source_lgs6_ef',
            'out_source_ngs1_ef', 'out_source_ngs2_ef', 'out_source_ngs3_ef',
            'out_source_ref1_ef', 'out_source_ref2_ef', 'out_source_ref3_ef']

# ---------------------------------------
# LGS WFS simulation and slope processing
# ---------------------------------------

sh_lgs1: &LGS_SH
  class:             'SH'
  subap_wanted_fov:  16.1                    # Requested field-of-view [arcsec]
  sensor_pxscale:    1.15                    # Pixel scale in arcsec/pix
  subap_npx:         14                      # Output sampling [usually corresponding to CCD pixels]
  subap_on_diameter: 68                      # Number of subapertures in diameter
  wavelengthInNm:    589                     # [nm] Pyramid wavelength
  fov_ovs_coeff:     1.52                     # Force phase interpolation to a multiple of 68
  convolGaussSpotSize: 1.8
  inputs:
    in_ef: 'prop.out_source_lgs1_ef'
  outputs:  ['out_i']

sh_lgs2: { <<: *LGS_SH, inputs: {in_ef: 'prop.out_source_lgs2_ef' }}
sh_lgs3: { <<: *LGS_SH, inputs: {in_ef: 'prop.out_source_lgs3_ef' }}
sh_lgs4: { <<: *LGS_SH, inputs: {in_ef: 'prop.out_source_lgs4_ef' }}
sh_lgs5: { <<: *LGS_SH, inputs: {in_ef: 'prop.out_source_lgs5_ef' }}
sh_lgs6: { <<: *LGS_SH, inputs: {in_ef: 'prop.out_source_lgs6_ef' }}

detector_lgs1: &LGS_DETECTOR
  class:             'CCD'
  size:              [952,952]               # Detector size in pixels
  dt:                0.002                   # [s] Detector integration time
  bandw:             20                      # [nm] Sensor bandwidth
  photon_noise:      True                    # activate photon noise
  readout_noise:     True                    # activate readout noise
  readout_level:     2.7                     # readout noise in [e-/pix/frame]
  quantum_eff:       0.188                   # quantum efficiency * total transmission
  inputs:
    in_i: 'sh_lgs1.out_i'
  outputs:  ['out_pixels']

detector_lgs2: { <<: *LGS_DETECTOR, inputs: {in_i: 'sh_lgs2.out_i' }}
detector_lgs3: { <<: *LGS_DETECTOR, inputs: {in_i: 'sh_lgs3.out_i' }}
detector_lgs4: { <<: *LGS_DETECTOR, inputs: {in_i: 'sh_lgs4.out_i' }}
detector_lgs5: { <<: *LGS_DETECTOR, inputs: {in_i: 'sh_lgs5.out_i' }}
detector_lgs6: { <<: *LGS_DETECTOR, inputs: {in_i: 'sh_lgs6.out_i' }}

slopec_lgs1: &LGS_SLOPEC
  class:             'ShSlopec'
  thr_value:         10
  subapdata_object:  'morfeo_np_ps480p0.080_shs68x68_wl589_fv16.1_np14_th0.25'  # tag of the pyramid WFS pupils
  sn_object:         'morfeo_np_ps480p0.080_shs68x68_wl589_fv16.1_np14_th0.25_ce'  # tag of the slope reference vector
  inputs:
    in_pixels:        'detector_lgs1.out_pixels'
  outputs:  ['out_slopes', 'out_subapdata']

slopec_lgs2: { <<: *LGS_SLOPEC, inputs: {in_pixels: 'detector_lgs2.out_pixels' }}
slopec_lgs3: { <<: *LGS_SLOPEC, inputs: {in_pixels: 'detector_lgs3.out_pixels' }}
slopec_lgs4: { <<: *LGS_SLOPEC, inputs: {in_pixels: 'detector_lgs4.out_pixels' }}
slopec_lgs5: { <<: *LGS_SLOPEC, inputs: {in_pixels: 'detector_lgs5.out_pixels' }}
slopec_lgs6: { <<: *LGS_SLOPEC, inputs: {in_pixels: 'detector_lgs6.out_pixels' }}

# ---------------------------------------
# LO WFS simulation and slope processing
# ---------------------------------------

sh_ngs1: &NGS_SH
  class:             'SH'
  subap_on_diameter: 1                      # Number of subapertures in diameter
  subap_wanted_fov:  1.8                    # Requested field-of-view [arcsec]
  sensor_pxscale:    0.0075                 # Pixel scale in arcsec/pix
  subap_npx:         240                    # Output sampling [usually corresponding to CCD pixels]
  wavelengthInNm:    1650                   # [nm] Pyramid wavelength
  inputs:
    in_ef: 'prop.out_source_ngs1_ef'
  outputs:  ['out_i']

sh_ngs2: { <<: *NGS_SH, inputs: {in_ef: 'prop.out_source_ngs2_ef' }}
sh_ngs3: { <<: *NGS_SH, inputs: {in_ef: 'prop.out_source_ngs3_ef' }}

detector_ngs1: &NGS_DETECTOR
  class:             'CCD'
  size:              [240,240]               # Detector size in pixels
  dt:                0.002                   # [s] Detector integration time
  bandw:             330                      # [nm] Sensor bandwidth
  photon_noise:      True                    # activate photon noise
  readout_noise:     True                    # activate readout noise
  readout_level:     2.7                     # readout noise in [e-/pix/frame]
  quantum_eff:       0.382                   # quantum efficiency * total transmission
  inputs:
    in_i: 'sh_ngs1.out_i'
  outputs:  ['out_pixels']

detector_ngs2: { <<: *NGS_DETECTOR, inputs: {in_i: 'sh_ngs2.out_i' }}
detector_ngs3: { <<: *NGS_DETECTOR, inputs: {in_i: 'sh_ngs3.out_i' }}

slopec_ngs1: &NGS_SLOPEC
  class:             'ShSlopec'
  thr_value:         10
  subapdata_object:  'mcao_shs1x1_np240' #'auto'  # subaperture data tag
  sn_object:         null  # 'auto'         #  slope reference vector
  inputs:
    in_pixels:        'detector_ngs1.out_pixels'
  outputs:  ['out_slopes', 'out_subapdata']

slopec_ngs2: { <<: *NGS_SLOPEC, inputs: {in_pixels: 'detector_ngs2.out_pixels' }}
slopec_ngs3: { <<: *NGS_SLOPEC, inputs: {in_pixels: 'detector_ngs3.out_pixels' }}

# ---------------------------------------
# REF WFS simulation and slope processing
# ---------------------------------------

sh_ref1: &REF_SH
  class:             'SH'
  subap_on_diameter: 8                      # Number of subapertures in diameter
  subap_wanted_fov:  4.6                    # Requested field-of-view [arcsec]
  sensor_pxscale:    0.153                    # Pixel scale in arcsec/pix
  subap_npx:         30                      # Output sampling [usually corresponding to CCD pixels]
  wavelengthInNm:    750                     # [nm] Pyramid wavelength
  convolGaussSpotSize: 0.333
  inputs:
    in_ef: 'prop.out_source_ref1_ef'
  outputs:  ['out_i']

sh_ref2: { <<: *REF_SH, inputs: {in_ef: 'prop.out_source_ref2_ef' }}
sh_ref3: { <<: *REF_SH, inputs: {in_ef: 'prop.out_source_ref3_ef' }}

detector_ref1: &REF_DETECTOR
  class:             'CCD'
  size:              [240,240]               # Detector size in pixels
  dt:                0.002                   # [s] Detector integration time
  bandw:             400                      # [nm] Sensor bandwidth
  photon_noise:      True                    # activate photon noise
  readout_noise:     True                    # activate readout noise
  readout_level:     0.2                     # readout noise in [e-/pix/frame]
  quantum_eff:       0.400                   # quantum efficiency * total transmission
  inputs:
    in_i: 'sh_ref1.out_i'
  outputs:  ['out_pixels']

detector_ref2: { <<: *REF_DETECTOR, inputs: {in_i: 'sh_ref2.out_i' }}
detector_ref3: { <<: *REF_DETECTOR, inputs: {in_i: 'sh_ref3.out_i' }}

slopec_ref1: &REF_SLOPEC
  class:             'ShSlopec'
  thr_value:         10
  subapdata_object:  'morfeo_np_ps480p0.080_shs68x68_wl589_fv16.1_np14_th0.25' # 'auto'         #  subaperture data
  sn_object:         null  # 'auto'         #  slope reference vector
  inputs:
    in_pixels:        'detector_ref1.out_pixels'
  outputs:  ['out_slopes', 'out_subapdata']

slopec_ref2: { <<: *REF_SLOPEC, inputs: {in_pixels: 'detector_ref2.out_pixels' }}
slopec_ref3: { <<: *REF_SLOPEC, inputs: {in_pixels: 'detector_ref3.out_pixels' }}

# -------------------------------
# LIFT piston estimates from SRTC
# -------------------------------

lift:
  class:             'FuncGenerator'
  constant:          [0, 0, 0, 0, 0, 0]        # Piston estimates
  outputs: ['output']


# -----------------------------
# LGS pipeline
# -----------------------------

tomo_polc_lgs:
  class:              'Modalrec'
  recmat_object:      'MORFEO_LTAO'
#  polc:   true
  inputs:
    in_slopes_list:        ['slopec_lgs1.out_slopes','slopec_lgs2.out_slopes','slopec_lgs3.out_slopes','slopec_lgs4.out_slopes','slopec_lgs5.out_slopes','slopec_lgs6.out_slopes']
  outputs:  ['out_modes', 'out_pseudo_ol_modes']

subtract_ref:
  class:            'BaseOperation'
  sub: true
  inputs:
    in_value1: 'tomo_polc_lgs.out_modes'
    in_value2: 'control_ref.out_comm'
  outputs: ['out_value']

iir_lgs:
  class:             'IirFilter'
  num_coeffs:        [0, 0, 0, 0, 0]
  den_coeffs:        [0, 0, 0, 0, 0]
  inputs:
      delta_comm: 'subtract_ref.out_value'     
  outputs:  ['out_comm']

avc_lgs:
  class:             'AVC'
  inputs:
      in_measurement: 'tomo_polc_lgs.out_pseudo_ol_modes'     
  outputs:  ['out_comm']

# ----------------------------------------
# Common DM control
# ---------------------------------------

modal_combination:
  class:        'LinearCombination'
  inputs:
    in_vectors_list: ['iir_lgs.out_comm', 'iir_focus.out_comm', 'iir_lift.out_comm', 'iir_ngs.out_comm']
  outputs:
    out_vector: ['out_vector']

modal_integrator:
  class:        'Integrator'
  delay:             2                      # Total temporal delay in time steps
  int_gain_data:     'g0.40_4519'            # TODO  
  inputs:
      delta_comm: 'modal_combination.out_vector'     
  outputs:  ['out_comm']

sum_lo_avc:
  class:             'BaseOperation'
  sum: true
  inputs:
    in_value1: 'modal_integrator.out_comm'
    in_value2: 'avc_ngs.out_comm'
  outputs: ['out_value']

dm1:
  class:             'DM'
  #ifunc_object:      'M4_eso_zonal_486p_5352a_slaved'
  #m2c_object:        'M4_eso_39.5m_486p_20230215'
  #input_offset:      0                        # Offset into input command vector
  #nmodes:            4519
  type_str:          'zernike'              # modes type
  nmodes:            100                     # number of modes
  npixels:           486                    # linear dimension of DM phase array
  obsratio:          0.28                    # obstruction dimension ratio w.r.t. diameter
  height:            600                      # DM height [m]
  inputs:
      in_command: 'sum_lo_avc.out_value'
  outputs:  ['out_layer']

dm2:
  class:             'DM'
  #ifunc_object:      'MAORY_542pix_31nacts_cir_0.000obs_zonal_ifs'
  #m2c_object:        'MAORY_542pix_31nacts_cir_0.000obs_5zern_10000.0cn'
  #nmodes:            720
  #start_mode:        5                         # Offset into influence function matrix
  #input_offset:      4519                      # Offset into input command vector
  type_str:          'zernike'                  # modes type
  start_mode:        5                          # Offset into influence function matrix
  nmodes:            100                        # number of modes
  input_offset:      100                        # Offset into input command vector
  npixels:           542                        # linear dimension of DM phase array
  obsratio:          0.0                        # obstruction dimension ratio w.r.t. diameter
  height:            6500                       # DM height [m]
  inputs:
      in_command: 'sum_lo_avc.out_value'
  outputs:  ['out_layer']

dm3:
  class:             'DM'
  #ifunc_object:      'MAORY_648pix_37nacts_cir_0.000obs_zonal_ifs'
  #m2c_object:        'MAORY_648pix_37nacts_cir_0.000obs_5zern_10000.0cn'
  #nmodes:            1026
  #start_mode:        2                          # Offset into influence function matrix
  #input_offset:      5239  #  4519+720          # Offset into input command vector
  type_str:          'zernike'                  # modes type
  start_mode:        2                          # Offset into influence function matrix
  nmodes:            100                        # number of modes
  input_offset:      200                        # Offset into input command vector
  npixels:           658                        # linear dimension of DM phase array
  obsratio:          0.0                        # obstruction dimension ratio w.r.t. diameter
  height:            17500                      # DM height [m]
  inputs:
      in_command: 'sum_lo_avc.out_value'
  outputs:  ['out_layer']

# ----------------
# LO pipeline
# ----------------

tomo_polc_ngs:
  class:              'Modalrec'
  recmat_object:      'MORFEO_LTAO'         # TODO
#  polc:   true
  inputs:
    in_slopes_list:        ['slopec_ngs1.out_slopes','slopec_ngs2.out_slopes','slopec_ngs3.out_slopes']
  outputs:  ['out_modes', 'out_pseudo_ol_modes']

iir_ngs:
  class:             'IirFilter'
  num_coeffs:        [0, 0, 0, 0, 0]
  den_coeffs:        [0, 0, 0, 0, 0]
  inputs:
      delta_comm: 'tomo_polc_ngs.out_modes'     
  outputs:  ['out_comm']

avc_ngs:
  class:             'AVC'
  inputs:
      in_measurement: 'tomo_polc_ngs.out_pseudo_ol_modes'     
  outputs:  ['out_comm']

# --------------
# Focus pipeline
# --------------

rec_focus:
  class:              'Modalrec'
  recmat_object:      'MORFEO_LTAO'         # TODO
  inputs:
    in_slopes_list:        ['slopec_ref1.out_slopes','slopec_ref2.out_slopes','slopec_ref3.out_slopes']
  outputs:  ['out_modes', 'out_pseudo_ol_modes']

iir_focus:
  class:             'IirFilter'
  num_coeffs:        [0, 0, 0, 0, 0]
  den_coeffs:        [0, 0, 0, 0, 0]
  inputs:
      delta_comm: 'rec_focus.out_modes'     
  outputs:  ['out_comm']


# --------------
# REF pipeline
# --------------

tomo_polc_ref:
  class:              'Modalrec'
  recmat_object:      'MORFEO_LTAO'         # TODO
#  polc:   true
  inputs:
    in_slopes_list:        ['slopec_ref1.out_slopes','slopec_ref2.out_slopes','slopec_ref3.out_slopes']
  outputs:  ['out_modes', 'out_pseudo_ol_modes']

iir_ref:
  class:             'IirFilter'
  num_coeffs:        [0, 0, 0, 0, 0]
  den_coeffs:        [0, 0, 0, 0, 0]
  inputs:
      delta_comm: 'tomo_polc_ref.out_modes'     
  outputs:  ['out_comm']

control_ref: 
  class:             'Integrator'
  delay:             2                      # Total temporal delay in time steps
  int_gain_data:     'g0.40_4519'  # 'g0.01_100'   # TODO
  inputs:
      delta_comm: 'iir_ref.out_comm'     
  outputs:  ['out_comm']

# -------------
# LIFT pipeline
# -------------

iir_lift:
  class:             'IirFilter'
  num_coeffs:        [0, 0, 0, 0, 0]
  den_coeffs:        [0, 0, 0, 0, 0]
  inputs:
      delta_comm: 'lift.output'
  outputs:  ['out_comm']


# ---------------
# Displays
# ----------------



psf:
  class:             'PSF'
  wavelengthInNm:    2200                 # [nm] Imaging wavelength
  nd:                4                    # padding coefficient for PSF computation
  start_time:        0.05                 # PSF integration start time
  inputs:
      in_ef:  'prop.out_source_on_axis_ef'
  outputs:  ['out_psf', 'out_sr']

# sc1_disp:
#  class:            'SlopecDisplay'
#  inputs:
#    slopes:       'slopec_lgs1.out_slopes'
#    subapdata:    'slopec_lgs1.out_subapdata'
#  disp_factor:      1

# psf_disp:
#  class:            'PsfDisplay'
#  inputs:
#    psf:       "psf.out_psf"
#  window:           14
#  title:            'PSF'
#  disp_factor:      1

# sr_disp:
#   class:            'PlotDisplay'
#   inputs:
#     value:       'psf.out_sr'
#   window:           11
#   title:            'SR'

# cmd_disp:
#   class:            'ModesDisplay'
#   inputs:
#     modes:       "rec.out_modes"
#   window:           16
#   title:            'rec.out_modes'

# dm_disp:
#   class:            'PhaseDisplay'
#   inputs:
#     phase:       "dm.out_layer"
#   window:           13
#   title:            'DM'
#   disp_factor:      2

# ph1_disp:
#   class:            'PhaseDisplay'
#   inputs:
#     phase:       "prop.out_source_on_axis_ef"
#   window:           15
#   title:            'PHASE ON AXIS'
#   disp_factor:      2

# pixels_disp:
#   class:            'PixelsDisplay'
#   inputs:
#     pixels:      "detector_lgs1.out_pixels"
#   window:           25
#   title:            "Pixels"
#   disp_factor:      1
#   sh_as_pyr:        true
#   subapdata_object:  'morfeo_np_ps480p0.080_shs68x68_wl589_fv16.1_np14_th0.25'
